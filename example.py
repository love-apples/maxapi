from maxapi.bot import Bot
from maxapi.dispatcher import Dispatcher
from maxapi.types.updates.message_created import MessageCreated
from maxapi.types.updates.message_callback import MessageCallback
from maxapi.types.attachments.attachment import ButtonsPayload
from maxapi.types.attachments.buttons.callback_button import CallbackButton
from maxapi.types.attachments.attachment import Attachment
from maxapi.enums.attachment import AttachmentType
from maxapi.enums.button_type import ButtonType
from maxapi.enums.intent import Intent
from maxapi.filters import F


bot = Bot('—Ç–æ–∫–µ–Ω')
dp = Dispatcher()

# –û—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Ç–µ–∫—Å—Ç "–ü—Ä–∏–≤–µ—Ç"
@dp.message_created(F.message.body.text == '–ü—Ä–∏–≤–µ—Ç')
async def hello(obj: MessageCreated):
    await obj.message.answer('–ü—Ä–∏–≤–µ—Ç üëã')

# –û—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Ç–µ–∫—Å—Ç "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞"
@dp.message_created(F.message.body.text == '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞')
async def hello(obj: MessageCreated):
    button_1 = CallbackButton(type=ButtonType.CALLBACK, text='–ö–Ω–æ–ø–∫–∞ 1', payload='1', intent=Intent.DEFAULT)
    button_2 = CallbackButton(type=ButtonType.CALLBACK, text='–ö–Ω–æ–ø–∫–∞ 2', payload='2', intent=Intent.DEFAULT)

    keyboard = ButtonsPayload(buttons=[[button_1], [button_2]])

    attachments = [Attachment(type=AttachmentType.INLINE_KEYBOARD, payload=keyboard)]

    await obj.message.answer('–ü—Ä–∏–≤–µ—Ç üëã', attachments=attachments)

# –û—Ç–≤–µ—Ç—á–∞–µ—Ç –Ω–∞ –∫–æ–ª–ª–±–µ–∫ —Å –Ω–∞—á–∏–Ω–∫–æ–π "1"
@dp.message_callback(F.callback.payload == '1')
async def _(obj: MessageCallback):
    await obj.message.answer('–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É 1 ü§©')

# –û—Ç–≤–µ—Ç—á–∞–µ—Ç –Ω–∞ –∫–æ–ª–ª–±–µ–∫ —Å –Ω–∞—á–∏–Ω–∫–æ–π "2"
@dp.message_callback(F.callback.payload == '2')
async def _(obj: MessageCallback):
    await obj.message.answer('–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É 2 ü•≥')

# –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ª—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message_created(F.message.body.text)
async def hello(obj: MessageCreated):
    await obj.message.answer(f'–ü–æ–≤—Ç–æ—Ä—è—é –∑–∞ –≤–∞–º–∏: {obj.message.body.text}')


dp.handle_webhook(bot)